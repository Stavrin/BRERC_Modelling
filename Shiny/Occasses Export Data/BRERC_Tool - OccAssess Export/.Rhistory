load("C:/BRERC/.RData")
write.csv(df,"C://BRERC2.csv", row.names = TRUE)
system("chmod 644 BRERC2.csv")
system("chmod 644 C://BRERC/BRERC2.csv")
periods <- list(1950:1959, 1960:1969, 1970:1979, 1980:1989, 1990:1999, 2000:2009, 2010:2019)
#dataset is too big to look at everything at once, will need subset
nRec <- assessRecordNumber(dat = MyData,
periods = periods,
species = "Species",
x = "east",
y = "north",
year = "Year",
spatialUncertainty = "Uncertainty",
identifier = "taxagroup",
normalize = FALSE)
str(nRec$data)
nRec$plot
#This plots against 'identifier', I've set that to be taxa group but could be species if small dataset
#####Assess Species Number#####
# In addition to the number of records, you may wish to know how the number of species
# (taxonomic coverage) in your dataset changes over time. For this you can use the function assessSpeciesNumber
periods <- list(1950:1959, 1960:1969, 1970:1979, 1980:1989, 1990:1999, 2000:2009, 2010:2019)
nSpec <- assessSpeciesNumber(dat = MyData,
periods = periods,
species = "Species",
x = "east",
y = "north",
year = "Year",
spatialUncertainty = "Uncertainty",
identifier = "taxagroup",
normalize = FALSE)
str(nSpec$data)
nSpec$plot
#####Assess Species ID######
#It has been speculated that apparent changes in taxonomic coverage could, in fact, reflect a
# change in taxonomic expertise over time. For example, if fewer individuals have the skill to
#identify certain species, then it may not appear in your dataset in the later periods.
#The function assessSpeciesID treats the proportion of species identified to species level
#as a proxy for taxonomic expertise:
periods <- list(1950:1959, 1960:1969, 1970:1979, 1980:1989, 1990:1999, 2000:2009, 2010:2019)
propID <- assessSpeciesID(dat = MyData,
periods = periods,
type = "proportion",
species = "Species",
x = "east",
y = "north",
year = "Year",
spatialUncertainty = "Uncertainty",
identifier = "taxagroup")
str(propID$data)
propID$plot
#This deosn't really work for the dataset as is, will need some playing about to see the benefits.
#####assess Rarity Bias#####
# A number of studies have defined taxonomic bias in a dataset as the degree of
# proportionality between species' range sizes (usually proxied by the number of
# grid cells on which it has been recorded) and the total number of records. One
# can regress the number of records on range size, and the residuals give an index
# of how over-or undersampled a species is given its prevalence. The function assessSpeciesBias
# conducts these analyses for each time period, and uses the r2 value from the linear regressions
# as an index proportionality between range sizes and number of records. Higher values indicate
# that species' are sampled in proportion to their range sizes whereas lower values indicate that
# some species are over- or undersampled.
periods <- list(1950:1959, 1960:1969, 1970:1979, 1980:1989, 1990:1999, 2000:2009, 2010:2019)
taxBias <- assessRarityBias(dat = MyData,
periods = periods,
res = 0.5,
prevPerPeriod = FALSE,
species = "Species",
x = "east",
y = "north",
year = "Year",
spatialUncertainty = "Uncertainty",
identifier = "taxagroup")
str(taxBias$data)
taxBias$plot +ggplot2::ylim(c(0,1))
View(periods)
View(periods)
View(periods)
library(lubridate)
library(tidyverse)
library(dplyr)
library(occAssess)
library(rnrfa)
library(sparta)
periods <- list(1950:1959, 1960:1969, 1970:1979, 1980:1989, 1990:1999, 2000:2009, 2010:2019)
#dataset is too big to look at everything at once, will need subset
nRec <- assessRecordNumber(dat = MyData,
periods = periods,
species = "Species",
x = "east",
y = "north",
year = "Year",
spatialUncertainty = "Uncertainty",
identifier = "taxagroup",
normalize = FALSE)
str(nRec$data)
nRec$plot
#This plots against 'identifier', I've set that to be taxa group but could be species if small dataset
#####Assess Species Number#####
# In addition to the number of records, you may wish to know how the number of species
# (taxonomic coverage) in your dataset changes over time. For this you can use the function assessSpeciesNumber
periods <- list(1950:1959, 1960:1969, 1970:1979, 1980:1989, 1990:1999, 2000:2009, 2010:2019)
nSpec <- assessSpeciesNumber(dat = MyData,
periods = periods,
species = "Species",
x = "east",
y = "north",
year = "Year",
spatialUncertainty = "Uncertainty",
identifier = "taxagroup",
normalize = FALSE)
str(nSpec$data)
nSpec$plot
#####Assess Species ID######
#It has been speculated that apparent changes in taxonomic coverage could, in fact, reflect a
# change in taxonomic expertise over time. For example, if fewer individuals have the skill to
#identify certain species, then it may not appear in your dataset in the later periods.
#The function assessSpeciesID treats the proportion of species identified to species level
#as a proxy for taxonomic expertise:
periods <- list(1950:1959, 1960:1969, 1970:1979, 1980:1989, 1990:1999, 2000:2009, 2010:2019)
propID <- assessSpeciesID(dat = MyData,
periods = periods,
type = "proportion",
species = "Species",
x = "east",
y = "north",
year = "Year",
spatialUncertainty = "Uncertainty",
identifier = "taxagroup")
str(propID$data)
propID$plot
#This deosn't really work for the dataset as is, will need some playing about to see the benefits.
#####assess Rarity Bias#####
# A number of studies have defined taxonomic bias in a dataset as the degree of
# proportionality between species' range sizes (usually proxied by the number of
# grid cells on which it has been recorded) and the total number of records. One
# can regress the number of records on range size, and the residuals give an index
# of how over-or undersampled a species is given its prevalence. The function assessSpeciesBias
# conducts these analyses for each time period, and uses the r2 value from the linear regressions
# as an index proportionality between range sizes and number of records. Higher values indicate
# that species' are sampled in proportion to their range sizes whereas lower values indicate that
# some species are over- or undersampled.
periods <- list(1950:1959, 1960:1969, 1970:1979, 1980:1989, 1990:1999, 2000:2009, 2010:2019)
taxBias <- assessRarityBias(dat = MyData,
periods = periods,
res = 0.5,
prevPerPeriod = FALSE,
species = "Species",
x = "east",
y = "north",
year = "Year",
spatialUncertainty = "Uncertainty",
identifier = "taxagroup")
str(taxBias$data)
taxBias$plot +ggplot2::ylim(c(0,1))
View(periods)
#Needs to be Y-M-D
MyData$dateofrecord <- as.Date(MyData$dateofrecord)
class(MyData$dateofrecord)
# Run some data diagnostics on our data
results <- dataDiagnostics(taxa = MyData$Species,
site = MyData$Site,
time_period = MyData$dateofrecord,
progress_bar = FALSE)
Resultatios <- RunnitFirst()
shiny::runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool')
RunnitFirst()
RunnitFirst()
Resultatios <- RunnitFirst()
RunnitFirst()
RunningFirst()
Resultatios <- RunFirst()
source("Run_First.R")
Resultatios <- RunFirst()
Resultatios <- RunFirstly()
source("Run_First.R")
Resultatios <- RunFirstly()
shiny::runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
shiny::runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp()
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp()
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp()
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
output
list(shinyoutput)
list(output)
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp()
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - v1.1')
gc()
shiny::runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
shiny::runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
shiny::runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
force(i)
force(i)
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
force(y)
force(f)
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
force(y)
force(f)
View(f)
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
force(y)
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
library (ggplot2)
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
shiny::runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess - Public')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess - Public')
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='brerc',
token='F4B5D6437FEEE3339344A16DB725618D',
secret='<SECRET>')
rsconnect::setAccountInfo(name='brerc',
token='F4B5D6437FEEE3339344A16DB725618D',
secret='<SECRET>')
rsconnect::setAccountInfo(name='brerc',
token='F4B5D6437FEEE3339344A16DB725618D',
secret='<SECRET>')
rsconnect::setAccountInfo(name='brerc',
token='F4B5D6437FEEE3339344A16DB725618D',
secret='1JpFkt++PbMCyJDNkNLKGL9O1WzuATxB0mtkZI5R')
#Run this code to get a new CSV to work with that contains all the data
#Set your working directory
setwd("C:/BRERC")
#I called that dataset BRERC, you will need to change that. Don't touch anything
#else though!
df<-read.csv("BRERC.csv")
library(lubridate)
library(tidyverse)
library(dplyr)
library(occAssess)
library(rnrfa)
#SPARTA has a sperarate install script as it is complicated, you should run that first.
library(sparta)
#add eastings and northing
# If required, remove spaces in the NGR
df$Site = gsub(" ", "", df$Site, fixed=T)
# Convert NGR to easting and northing
x = osg_parse(df$Site)
# Extract easting and northing from the list, x
df$east = x[[1]]
df$north = x[[2]]
#Adds a randomised date in the year the observation was taken (useful where functions require a full date)
df$Date<-as.POSIXct(paste0(df$Year, "-01-01")) +
lubridate::days(sample(0:364, nrow(df), TRUE))
df$Date <- as.Date(df$Date)
#too few records pre-1959 to work with
MyData <- subset(df, df$Year > 1959)
#MyData <- df
rm(df)
rm(x)
#add in time periods (can change to whatever you like, i've taken decades)
##IMORTANT: Can't use a unit of less than a year if using the 'date' column generated above
#NOTE - the date2timeperiod function seems to have stopped working????
#time_periods <- data.frame(start = c(1960, 1970, 1980, 1990, 2000, 2010, 2020),
#end = c(1969, 1979, 1989, 1999, 2009, 2019, 2029))
#MyData$TP<- date2timeperiod(MyData$Date, time_periods)
#Made a work around.
Time <-MyData %>% mutate(TP =
case_when(Year >= 1960 & Year <= 1969 ~ "1",
Year >= 1970 & Year <= 1979 ~ "2",
Year >= 1980 & Year <= 1989 ~ "3",
Year >= 1990 & Year <= 1999 ~ "5",
Year >= 2000 & Year <= 2009 ~ "6",
Year >= 2010 & Year <= 2020 ~ "7")
)
rm(MyData)
MyData<- Time
rm(Time)
#Count how many of each species - useful to know but not needed
summary<- MyData %>% count(Species, sort = TRUE)
#add uncertainty#
#Darwin standard uses 0.7km uncertainty for a 1km gridsquare as standard, as used by NBN
MyData$Count <- nchar(MyData$Site)
cert <-MyData %>% mutate(Uncertainty =
case_when(Count == 4 ~ "7",
Count == 6 ~ "0.7",
Count == 8 ~ "0.07",
Count == 10 ~ "0.007",
Count == 12 ~ "0.0007")
)
MyData <- cert
rm(cert)
MyData$TP  <- as.numeric(MyData$TP)
MyData$Uncertainty  <- as.numeric(MyData$Uncertainty)
MyData$Year <- as.integer(MyData$Year)
#####At this point you have a dataset which works with Darwin Standard#####
#Writing data to a new csv file called BRERC2, you have to run RStudio as Admin
#or you'll see "no permission to open file"
#df <- MyData
write.csv(MyData,"C://BRERC//BRERC2.csv", row.names = TRUE)
system("chmod 644 C://BRERC//BRERC2.csv")
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess - Public')
df1 = read.csv("Data/All_BCC_Data.CSV")
df1 = read.csv("data/All_BCC_Data.CSV")
df1 = read.csv("data/All_BCC_Data.CSV")
Y
Y
gc()
n
df1 = read.csv("data/All_BCC_Data.CSV")
getwd()
setwd("~/")
getwd()
getwd()
shiny::runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess - Public')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess - Public')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/BRERC_Tool - OccAssess')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
shiny::runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Run First/BRERC_Tool - DataDiagnostics')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Run First/BRERC_Tool - DataDiagnostics')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Run First/BRERC_Tool - DataDiagnostics')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Run First/BRERC_Tool - DataDiagnostics')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Run First/BRERC_Tool - DataDiagnostics')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Run First/BRERC_Tool - DataDiagnostics')
shiny::runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
plot(propID$data$Period, propID$data$prop, pch=19, main='Default Axes')
runApp('C:/Users/Bristol Culture/Downloads/BRERC_Modelling/Shiny/Occasses Export Data/BRERC_Tool - OccAssess Export')
